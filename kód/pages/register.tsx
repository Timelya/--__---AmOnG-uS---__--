import type { NextPage } from "next";
import Head from "next/head";
import { Component, useState } from "react";
import { prisma } from "../lib/prisma";
import { useRouter } from "next/router";
import { sha256 } from "js-sha256";
import { getUsers } from "./Components/getServerSideProps";

interface FormData {
  name: string;
  password: string;
  passwordConfirmation: string;
  id: string;
}
interface User {
  users: {
    id: string;
    name: string;
    password: string;
    email: string;
  }[];
}

const Register: NextPage<User> = ({ users }) => {
  const [form, setForm] = useState<FormData>({
    name: "",
    password: "",
    passwordConfirmation: "",
    id: "",
  });
  const router = useRouter();
  const refreshData = () => {
    router.replace(router.asPath);
  };

  function handleSubmit(data: FormData) {
    if (!data.name) {
      alert("Felhasználó név nem lehet üres");
      return;
    }
    if (!data.password) {
      alert("Jelszó nem lehet üres");
      return;
    }
    if (!data.passwordConfirmation) {
      alert("Jelszó megerősítés nem lehet üres");
      return;
    }
    if(data.password !=data.passwordConfirmation)
    {
      alert("A megadott jelszavak nem egyeznek");
      return;
    }
    console.log(users)
    if(users.find(x=>x.name==data.name))
    {
      alert("Foglalt felhasználónév");
      return;
    }
    // CREATE
    data.password = sha256(data.password);
      fetch("api/createUser", {
      body: JSON.stringify(data),
      headers: {
        "Content-Type": "application/json",
      },
      method: "POST",
    }).then(() => {
      setForm({ name: "", password: "", passwordConfirmation: "", id: "" });
      refreshData();
    });
  }
  return (
    <>
    <div /*középre helyezés*/className="grid place-items-center h-56 ...">
      
    <div /*háttér*/className="bg"></div>
    <div /*háttér*/className="bg bg2"></div>
    <div /*háttér*/className="bg bg3"></div>
    <div /*háttér*/className="content text-2xl ...">
      <Head>
        <title className="">Regisztráció</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <h1 id="regisztrációsCímSzöveg" className="box-border p-4 border-4 ...">Regisztráció</h1>
        <br></br>
      <form
        className="w-auto min-w-[25%] max-w-min mx-auto space-y-6 flex flex-col items-stretch"
        onSubmit={(e) => {
          e.preventDefault();
          handleSubmit(form);
        }}
      ><div className="labelFeliratok">
        <input
          type="text" id="text"
          placeholder=""
          value={form.name}
          onChange={(e) => setForm({ ...form, name: e.target.value })}
          className="label"
        />
        <p>Felhasználónév</p>
        <input
          type="password" id="text"
          placeholder=""
          value={form.password}
          onChange={(e) => setForm({ ...form, password: e.target.value })}
          className="label"
        />
        <p>Jelszó</p>
        <input
          type="password" id="text"
          placeholder=""
          value={form.passwordConfirmation}
          onChange={(e) => setForm({ ...form, passwordConfirmation: e.target.value })}
          className="label"
        />
        <p>Jelszó ismét</p></div>
        
        <button type="submit" className="gomb">
          Register{" "}
        </button>
      </form>
      </div></div>
    </>
  );
};

export default Register;
